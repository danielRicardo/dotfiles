unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# General env config
set-option -g default-terminal "screen-256color"
set-option -g status-keys "emacs"

# Customizing the status bar
set-option -g status-bg '#666666'
set-option -g status-fg '#aaaaaa'
set-option -g status-left-length 50
set-option -g status-right " #(battery -t)  #(date '+%a, %b %d - %H:%M') "

# Pane navigation
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
is_ssh='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?ssh?)(diff)?$"'
bind-key C-q if-shell "$is_ssh" "display-message \"true\"" "display-message \"false\""
bind-key - split-window -v  -c "#{pane_current_path}"
bind-key \ split-window -h  -c "#{pane_current_path}"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Pane resizing
# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

bind c new-window -c "#{pane_current_path}"
set -g base-index 1
set -g renumber-windows on
bind-key b break-pane -d

bind-key j choose-tree -s

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Fuzzy find sessions
bind C-j split-window -v "tmux display-message -p '#S' | read -l current; and tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$current\$\" | fzf --reverse | read -l session; and tmux switch-client -t $session"

# Prompted join-pane
bind-key J command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# "break session" and "kill session" without exiting tmux
bind-key C-b send-keys 'tat; and exit' 'C-m'
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message p "#S")" || tmux kill-session'

bind-key C-K split-window -h "startDevEnv"
bind-key -n C-W split-window -v "vim +VimwikiIndex"
